{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"displayName": "GIT",
			"description": "Integrazione SCM su Git",
			"command.clone": "Clona",
			"command.init": "Inizializza repository",
			"command.close": "Chiudi repository",
			"command.refresh": "Aggiorna",
			"command.openChange": "Apri modifiche",
			"command.openFile": "Apri file",
			"command.openHEADFile": "Apri File (HEAD)",
			"command.stage": "Prepara modifiche per commit",
			"command.stageAll": "Prepara tutte le modifiche per commit",
			"command.stageSelectedRanges": "Prepara per il commit intervalli selezionati",
			"command.revertSelectedRanges": "Ripristina intervalli selezionati",
			"command.stageChange": "Prepara modifica per commit",
			"command.revertChange": "Annulla modifica",
			"command.unstage": "Annulla preparazione modifiche per commit",
			"command.unstageAll": "Annulla preparazione di tutte le modifiche per commit",
			"command.unstageSelectedRanges": "Annulla preparazione per il commit di intervalli selezionati",
			"command.clean": "Rimuovi modifiche",
			"command.cleanAll": "Rimuovi tutte le modifiche",
			"command.commit": "Commit",
			"command.commitStaged": "Esegui commit dei file preparati",
			"command.commitStagedSigned": "Esegui commit dei file preparati (approvazione)",
			"command.commitStagedAmend": "Esegui commit dei file preparati (modifica)",
			"command.commitAll": "Esegui commit di tutto",
			"command.commitAllSigned": "Esegui commit di tutto (approvazione)",
			"command.commitAllAmend": "Esegui commit di tutto (modifica)",
			"command.undoCommit": "Annulla ultimo commit",
			"command.checkout": "Estrai in...",
			"command.branch": "Crea ramo...",
			"command.deleteBranch": "Elimina ramo...",
			"command.renameBranch": "Rinomina Branch...",
			"command.merge": "Merge ramo...",
			"command.createTag": "Crea tag",
			"command.fetch": "Fetch",
			"command.pull": "Esegui pull",
			"command.pullRebase": "Esegui pull (Riassegna)",
			"command.pullFrom": "Pull da...",
			"command.push": "Esegui push",
			"command.pushTo": "Esegui push in...",
			"command.pushWithTags": "Esegui push con tag",
			"command.sync": "Sincronizza",
			"command.syncRebase": "Sincronizza (Rebase)",
			"command.publish": "Pubblica ramo",
			"command.showOutput": "Mostra output GIT",
			"command.ignore": "Aggiungi file a .gitignore",
			"command.stashIncludeUntracked": "Stash (includi non tracciate)",
			"command.stash": "Accantona",
			"command.stashPop": "Preleva accantonamento...",
			"command.stashPopLatest": "Preleva accantonamento più recente",
			"config.enabled": "Indica se GIT è abilitato",
			"config.path": "Percorso dell'eseguibile di GIT",
			"config.autoRepositoryDetection": "Se i repository devono essere rilevati automaticamente",
			"config.autorefresh": "Indica se l'aggiornamento automatico è abilitato",
			"config.autofetch": "Indica se il recupero automatico è abilitato",
			"config.enableLongCommitWarning": "Indica se visualizzare un avviso in caso di messaggi di commit lunghi",
			"config.confirmSync": "Conferma prima di sincronizzare i repository GIT",
			"config.countBadge": "Controlla il contatore delle notifiche git. Con `all` vengono conteggiate tutte le modifiche. Con `tracked` vengono conteggiate solo le revisioni. Con `off` il contatore è disattivato.",
			"config.checkoutType": "Controlla il tipo di branch mostrati eseguendo il comando `Estrai in...`. `all` mostra tutti i refs, `local` mostra solamente i branch locali, `tags` mostra solamente i tag e `remote` mostra solamente i branch remoti.",
			"config.ignoreLegacyWarning": "Ignora l'avvertimento legacy di Git",
			"config.ignoreMissingGitWarning": "Ignora il messaggio di avviso quando manca Git",
			"config.ignoreLimitWarning": "Ignora il messaggio di avviso quando ci sono troppi cambiamenti in un repository",
			"config.defaultCloneDirectory": "Il percorso predefinito dove clonare un repository GIT",
			"config.enableSmartCommit": "Eseguire il commit di tutte le modifiche quando non ci sono modifiche preparate.",
			"config.enableCommitSigning": "Abilita la firma del commit con GPG.",
			"config.discardAllScope": "Controlla quali modifiche vengono rimosse tramite il comando `Rimuovi tutte le modifiche`. Con `all` vengono rimosse tutte le modifiche. Con `tracked` vengono rimossi solo i file di cui viene tenuta traccia. Con `prompt` viene visualizzata una finestra di dialogo ogni volta che si esegue l'azione.",
			"config.decorations.enabled": "Controlla se Git fornisce colori e distintivi alle visualizzazioni Esplora risorse e Editor aperti.",
			"config.promptToSaveFilesBeforeCommit": "Controlla se GIT deve verificare la presenza di file non salvati prima di eseguire il commit.",
			"config.showInlineOpenFileAction": "Controlla se visualizzare un'azione Apri file inline nella visualizzazione modifiche GIT.",
			"config.inputValidation": "Controlla quando visualizzare la convalida sull'input del messaggio di commit.",
			"config.detectSubmodules": "Controlla se rilevare automaticamente i moduli secondari GIT.",
			"config.detectSubmodulesLimit": "Controlla il limite dei sottomoduli git rilevati.",
			"colors.modified": "Colore delle risorse modificate.",
			"colors.deleted": "Colore delle risorse eliminate.",
			"colors.untracked": "Colore delle risorse non tracciate.",
			"colors.ignored": "Colore delle risorse ignorate.",
			"colors.conflict": "Colore delle risorse con conflitti.",
			"colors.submodule": "Colore delle risorse sottomodulo"
		},
		"out/statusbar": {
			"checkout": "Estrai...",
			"sync changes": "Sincronizza modifiche",
			"publish changes": "Pubblica modifiche",
			"syncing changes": "Sincronizzazione delle modifiche in corso..."
		},
		"out/repository": {
			"open": "Apri",
			"index modified": "Indice modificato",
			"modified": "Modificato",
			"index added": "Indice aggiunto",
			"index deleted": "Indice eliminato",
			"deleted": "Eliminato",
			"index renamed": "Indice rinominato",
			"index copied": "Indice copiato",
			"untracked": "Non registrato",
			"ignored": "Ignorato",
			"both deleted": "Entrambi eliminati",
			"added by us": "Aggiunto da Microsoft",
			"deleted by them": "Eliminato dall'utente",
			"added by them": "Aggiunto dall'utente",
			"deleted by us": "Eliminato da Microsoft",
			"both added": "Entrambi aggiunti",
			"both modified": "Entrambi modificati",
			"commitMessage": "Message (press {0} to commit)",
			"commit": "Esegui commit",
			"merge changes": "Esegui merge delle modifiche",
			"staged changes": "Modifiche preparate per il commit",
			"changes": "Modifiche",
			"commitMessageCountdown": "ancora {0} caratteri disponibili nella riga corrente",
			"commitMessageWarning": "{0} caratteri rispetto ai {1} disponibili nella riga corrente",
			"neveragain": "Non visualizzare più questo messaggio",
			"huge": "Il repository git '{0}' ha troppe modifiche attive - verrà attivato solo un sottoinsieme delle funzionalità di Git."
		},
		"out/model": {
			"too many submodules": "Il repository '{0}' ha {1} sottomoduli che non verranno aperti automaticamente. È possibile comunque aprirli individualmente aprendo il file all'interno.",
			"no repositories": "Non ci sono repository disponibili",
			"pick repo": "Scegli un repository"
		},
		"out/main": {
			"looking": "Ricerca di git in: {0}",
			"using git": "Uso di GIT {0} da {1}",
			"downloadgit": "Scarica GIT",
			"neverShowAgain": "Non visualizzare più questo messaggio",
			"notfound": "Git non trovato. Installarlo o configurarlo utilizzando l'impostazione 'git.path'.",
			"updateGit": "Aggiorna GIT",
			"git20": "La versione installata di GIT è la {0}. Per il corretto funzionamento di Code è consigliabile usare una versione di GIT non inferiore alla 2."
		},
		"out/commands": {
			"tag at": "Tag in {0}",
			"remote branch at": "Ramo remoto in {0}",
			"create branch": "$(plus) Crea nuovo branch",
			"repourl": "URL del repository",
			"cloning": "Clonazione del repository GIT '{0}'...",
			"proposeopen": "Aprire il repository clonato?",
			"openrepo": "Apri repository",
			"init": "Selezionare la cartella dell'area di lavoro in cui inizializzare il Git repo",
			"init repo": "Inizializza repository",
			"create repo": "Inizializza repository",
			"are you sure": "Questo creerà un repository Git in '{0}'. Sei sicuro di voler continuare?",
			"HEAD not available": "La versione HEAD di '{0}' non è disponibile.",
			"confirm stage files with merge conflicts": "Preparare per il commit {0} file con conflitti di merge?",
			"confirm stage file with merge conflicts": "Preparare per il commit {0} con conflitti di merge?",
			"yes": "Sì",
			"confirm revert": "Ripristinare le modifiche selezionate in {0}?",
			"revert": "Annulla modifiche",
			"discard": "Rimuovi modifiche",
			"confirm delete": "ELIMINARE {0}?",
			"delete file": "Elimina file",
			"confirm discard": "Rimuovere le modifiche in {0}?",
			"confirm discard multiple": "Rimuovere le modifiche in {0} file?",
			"warn untracked": "Verranno ELIMINATI {0} file di cui non viene tenuta traccia.",
			"confirm discard all single": "Rimuovere le modifiche in {0}?",
			"confirm discard all": "Rimuovere TUTTE le modifiche apportate in {0} file?\nQuesta operazione è IRREVERSIBILE.\nIl working set corrente andrà PERSO PER SEMPRE.",
			"discardAll multiple": "Rimuovi 1 file",
			"discardAll": "Rimuovi tutti i {0} file",
			"confirm delete multiple": "ELIMINARE {0} file?",
			"delete files": "Elimina file",
			"there are untracked files single": "Se rimosso, il file seguente di cui non viene tenuta traccia verrà ELIMINATO DAL DISCO: {0}.",
			"there are untracked files": "Se rimossi, {0} file di cui non viene tenuta traccia verranno ELIMINATI DAL DISCO.",
			"confirm discard all 2": "{0}\n\nQuesta operazione è IRREVERSIBILE. Il working set corrente andrà PERSO PER SEMPRE.",
			"yes discard tracked": "Rimuovi 1 file di cui viene tenuta traccia",
			"yes discard tracked multiple": "Rimuovi {0} file di cui viene tenuta traccia",
			"unsaved files single": "Il seguente file non è stato salvato: {0}\n\nVuoi salvarlo prima di eseguirne il commit? ",
			"unsaved files": "Ci sono {0} file non ancora salvati.\n\nVuoi salvarli prima di eseguirne il commit? ",
			"save and commit": "Salva tutto & esegui Commit",
			"commit": "Esegui il Commit comunque",
			"no staged changes": "Non ci sono modifiche in stage di cui eseguire il commit.\n\nSI desidera mettere in stage automaticamente tutte le modifiche ed eseguirne il commit direttamente?",
			"always": "Sempre",
			"no changes": "Non ci sono modifiche di cui eseguire il commit.",
			"commit message": "Messaggio di commit",
			"provide commit message": "Specificare un messaggio di commit",
			"select a ref to checkout": "Selezionare un ref di cui eseguire checkout",
			"branch name": "Nome ramo",
			"provide branch name": "Specificare un nome di ramo",
			"select branch to delete": "Seleziona un ramo da cancellare",
			"confirm force delete branch": "Il merge del ramo '{0}' non è completo. Elimina comunque?",
			"delete branch": "Elimina ramo",
			"invalid branch name": "Nome di branch non valido",
			"branch already exists": "La branch denominata '{0}' esiste già",
			"select a branch to merge from": "Selezionare un ramo da cui eseguire il merge",
			"merge conflicts": "Ci sono conflitti di merge. Risolverli prima di eseguire commit.",
			"tag name": "Nome tag",
			"provide tag name": "Specificare un nome di tag",
			"tag message": "Messaggio",
			"provide tag message": "Specificare un messaggio per aggiungere un'annotazione per il tag",
			"no remotes to fetch": "Questo repository non ha remote configurati da cui eseguire un fetch.",
			"no remotes to pull": "Il repository non contiene elementi remoti configurati come origini del pull.",
			"pick remote pull repo": "Selezionare un repository remoto da cui effettuare il pull del ramo",
			"no remotes to push": "Il repository non contiene elementi remoti configurati come destinazione del push.",
			"nobranch": "Estrarre un ramo per eseguire il push in un elemento remoto.",
			"confirm publish branch": "La branch '{0}' non ha una branch corrispondente a monte. Desideri pubblicarla?",
			"ok": "OK",
			"push with tags success": "Il push con tag è riuscito.",
			"pick remote": "Selezionare un repository remoto in cui pubblicare il ramo '{0}':",
			"sync is unpredictable": "Questa azione consentirà di effettuare il push e il pull di commit da e verso '{0}/[1]'.",
			"never again": "OK, non visualizzare più",
			"no remotes to publish": "Il repository non contiene elementi remoti configurati come destinazione della pubblicazione.",
			"no changes stash": "Non ci sono modifiche da accantonare.",
			"provide stash message": "Specificare un messaggio di accantonamento (facoltativo)",
			"stash message": "Messaggio di accantonamento",
			"no stashes": "Non ci sono accantonamenti da ripristinare.",
			"pick stash to pop": "Scegli un accantonamento da prelevare",
			"clean repo": "Pulire l'albero di lavoro del repository prima dell'estrazione.",
			"cant push": "Impossibile fare push dei ref su remoto. Provare a eseguire un 'Pull' prima, per integrare le modifiche.",
			"git error details": "GIT: {0}",
			"git error": "Errore GIT",
			"open git log": "Apri log GIT"
		},
		"out/autofetch": {
			"yes": "Sì",
			"no": "No",
			"not now": "Chiedimelo in seguito",
			"suggest auto fetch": "Desideri che Code [esegua `git fetch` periodicamente]({0})?"
		},
		"out/askpass-main": {
			"missOrInvalid": "Credenziali mancanti o non valide."
		}
	}
}